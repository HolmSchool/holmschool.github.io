{"version":3,"file":"component---src-templates-blog-post-js-7fdbef3501ce909191f2.js","mappings":"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","sources":["webpack://holm-school/./src/js/github-comments.js","webpack://holm-school/./src/templates/blog-post.js"],"sourcesContent":["// use of ajax vs getJSON for headers use to get markdown (body vs body_htmml)\n// todo: pages, configure issue url, open in new window?\n\nimport $ from 'jquery'\n\nexport var CurrentPage = 0;\n\n// export function ParseLinkHeader(link)\n// {\n//     var entries = link.split(\",\");\n//     var links = { };\n//     for (var i in entries)\n//     {\n//         var entry = entries[i];\n//         var link = { };\n//         link.name = entry.match(/rel=\\\"([^\\\"]*)/)[1];\n//         link.url = entry.match(/<([^>]*)/)[1];\n//         link.page = entry.match(/page=(\\d+).*$/)[1];\n//         links[link.name] = link;\n//     }\n//     return links;\n// }\n\nexport function DoGithubComments(comment_id, page_id)\n{\n    var repo_name = \"HolmSchool/holm-school-english-comments\";\n\n    if (page_id === undefined)\n        page_id = 1;\n\n    var api_url = \"https://api.github.com/repos/\" + repo_name;\n    //var api_issue_url = api_url + \"/issues/\" + comment_id;\n    var api_comments_url = api_url + \"/issues/\" + comment_id + \"/comments?page=\" + page_id;\n\n    var url = `https://github.com/${repo_name}/issues/` + comment_id;\n    if(typeof document !== \"undefined\") {\n        $(document).ready(function ()\n        {\n            $(\"#gh-comments-list\").empty();\n            $.ajax(api_comments_url, {\n                headers: {Accept: \"application/vnd.github.v3.html+json\"},\n                dataType: \"json\",\n                success: function(comments, textStatus, jqXHR) {\n                    \n                    // Add post button to first page\n                    if (page_id === 1)\n                        $(\"#gh-comments-list\").append(\"<a href='\" + url + \"#new_comment_field' rel='nofollow' class='btn'>Post a comment on Github</a><br><br>\");\n\n                    // Individual comments\n                    var count = 0;\n                    $.each(comments, function(i, comment) {\n\n                        var date = new Date(comment.created_at);\n\n                        var t = \"<div id='gh-comment'>\";\n                        t += \"<img src='\" + comment.user.avatar_url + \"' width='24px'>\";\n                        t += \"<b><a href='\" + comment.user.html_url + \"'>\" + comment.user.login + \"</a></b>\";\n                        t += \" posted at \";\n                        t += \"<em>\" + date.toLocaleString('en-US', { timeZone: 'America/Chicago' }) + \"</em>\";\n                        t += \"<div id='gh-comment-hr'></div>\";\n                        t += comment.body_html;\n                        t += \"</div>\";\n                        $(\"#gh-comments-list\").append(t);\n                        count++;\n                    });\n                    if (count < 30) {\n                        $(\"#gh-load-comments\").hide();\n                    } else {\n                        // $(\"#gh-load-comments\").attr(\"onclick\", \"DoGithubComments(\" + comment_id + \",\" + (page_id + 1) + \");\");\n                        $(\"#gh-load-comments\").show();\n                    }\n                    count = 0;\n                    // // Setup comments button if there are more pages to display\n                    // var links = null;\n                    // var links = ParseLinkHeader(jqXHR.getResponseHeader(\"Link\"));\n                    // if (links !== null) {\n                    //     if (\"next\" in links)\n                    //     {\n                    //         $(\"#gh-load-comments\").attr(\"onclick\", \"DoGithubComments(\" + comment_id + \",\" + (page_id + 1) + \");\");\n                    //         $(\"#gh-load-comments\").show();\n                    //     }\n                    //     else\n                    //     {\n                    //         $(\"#gh-load-comments\").hide();\n                    //     }\n                    // }\n                },\n                error: function(xhr) {\n                    $(\"#gh-comments-list\").append(\"Comments are not open for this post yet.\");\n                    $(\"#gh-load-comments\").hide();\n                }\n            });\n        });\n    }\n}","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { css } from '@emotion/react'\nimport Helmet from \"react-helmet\"\n\n\n\n\nconst blogPosts = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const { next, prev, left, right } = pageContext\n  const ghc = require('../js/github-comments')\n  ghc.DoGithubComments(post.frontmatter.ghissue)\n  let page = 1\n  return (\n    <Layout>\n      <Helmet>\n        <title>{post.frontmatter.title}</title>\n        <meta name=\"description\" content={post.excerpt} />\n      </Helmet>\n      <div css={css`\n        margin: 70px auto 0px auto;\n        max-width: 800px;\n        padding: 0 10px;\n        @media screen and (min-width: 800px) {\n          margin: 56px auto 0px auto;\n        }\n      `}>\n        <h4><Link to={`/blog/`}>&lt;&nbsp;Back to blog</Link></h4>\n        {prev ? <span css={css`float: left;padding: 5px;border-left:none;`}><Link to={prev.fields.slug}>&lt;&lt; Previous Post</Link></span>: null }\n          \n        {next ? <span css={css`float: right;padding: 5px;`}><Link to={next.fields.slug}>Next Post &gt;&gt;</Link></span> : null }\n        <br/>\n        <h1>{post.frontmatter.title}</h1>\n        <h2 css={css`\n              color: #bbb;\n        `}>{post.frontmatter.date}</h2>\n        {post.frontmatter.blip ? <img css={css`float: left; display: inline; max-height: 200px; max-width: 300px; margin: 0px 15px 5px 0px;`} src={`/blog_blips/${post.frontmatter.blip}.jpg`} alt={``} /> : ``}<div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr/>\n        <div css={css`display: inline-block;width:100%;`}>\n          \n            {prev ? <span css={css`float: left;padding: 5px;border-left:none;`}><Link to={prev.fields.slug}>&lt;&lt; Previous: {prev.fields.title}</Link></span>: null }\n          \n            <br/>\n            {next ? <span css={css`float: right;padding: 5px;`}><Link to={next.fields.slug}>Next: {next.fields.title} &gt;&gt;</Link></span> : null }\n            <br/>\n            <br/>\n            {left ? <span css={css`float: left;padding: 5px;border: 1px solid white;border-left: none;`}><Link to={left.fields.slug}>&lt; Random</Link></span>: null }\n            <br/>\n          \n            {right ? <span css={css`float: right;padding: 5px;`}><Link to={right.fields.slug}>Random &gt;</Link></span> : null }\n            <br/>\n            <br/>\n          \n        </div>\n        <hr/>\n        <div id=\"gh-comments\">\n          <h6>COMMENTS</h6>\n          <div id=\"gh-comments-list\"></div>\n          <div style={{textAlign: 'center'}}><button css={css`border-radius: 3px;border: 1px solid purple;color: purple;font-family:\"Courier New\", Courier;vertical-align: middle;`} onClick={() => ghc.DoGithubComments(post.frontmatter.ghissue, ++page)} id=\"gh-load-comments\">Load more comments</button></div>\n        </div>\n        <br/>\n      </div>\n    </Layout>\n  )\n}\nexport default blogPosts;\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        ghissue\n        date\n        blip\n      }\n    }\n  }\n`\n"],"names":["CurrentPage","DoGithubComments","comment_id","page_id","repo_name","undefined","api_comments_url","url","document","$","ready","empty","headers","Accept","dataType","success","comments","textStatus","jqXHR","append","count","i","comment","date","Date","created_at","t","user","avatar_url","html_url","login","toLocaleString","timeZone","body_html","hide","show","error","xhr","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","data","pageContext","post","markdownRemark","next","prev","left","right","ghc","require","frontmatter","ghissue","page","___EmotionJSX","Layout","Helmet","title","content","excerpt","css","Link","to","fields","slug","blip","src","alt","dangerouslySetInnerHTML","__html","html","id","style","textAlign","onClick"],"sourceRoot":""}