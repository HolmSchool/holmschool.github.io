import React from "react"
import Layout from "../components/layout"
import { css } from '@emotion/react'
import { Link } from "gatsby"
import Helmet from "react-helmet"

import birger from "../img/15259404522850.jpg"

const aboutPage = ({ data }) => (
  <Layout>
    <Helmet>
      <title>About - A Site for Free Education</title>
      <meta name="description" content="Find out how to study computer science for free in order to fuel your retirement savings in your late teens! All about 'Holmschooling' as an early retirement/financial independence strategy."/>
    </Helmet>
    <div className={`bigimages`} css={css`margin-top: 70px;@media screen and (min-width: 800px) { margin-top: 48px;}`}>
      <img src={birger} width="100%" alt="Painting by Birger Sandzen"/>
    </div>
    <div css={css`
      margin: 0 auto;
      max-width: 800px;
      padding: 0 10px;
    `}>
        <h1>About 'Holm School', A Site for Free Education</h1>
        <h2>You Can Learn Computer Science for Free, and Fund Your Retirement at the Same Time</h2>
          
          <p>
            The question of learning computer science no longer is about affordability. It is a matter of grit and determination. Open source has affected computer science textbooks and lectures to such a degree that there are probably thirty years worth of free up-to-date material for every computer science student out there to potentially work through in their odyssey to get an undergraduate-equivalent computer science education. Public libraries offer Lynda, Treehouse, and O'Reilly Online accounts which provide great educational boosts to CS students (not to mention their actual physical books in their stack). Many people wonder about the economics of "Free Textbooks" and missing out on human-to-human lectures in exchange for free OpenCourseWare, and whether their their quality is high enough for effective learning. Fortunately computer science professors usually make a decent enough salary to fund their philanthropy of releasing free textbooks. Some professors are paid in advanced for open educational resources. Some just do it for sport when their textbook isn't a huge success or goes out of print. Many professors, who usually release their lectures on MOOCs (which still usually mandate a teacher has a PhD), are even putting tutorials directly on YouTube now. There is enough interest in computer science that the funding-side of OER and OCW "finds a way." Distribution costs are close to free thanks to static web hosting and YouTube. If you are willing to learn on a laptop or tablet instead of in paper or in person, you can make out like a friggin bandit in educational costs savings.
          </p>
          <p>
            <a href={`https://www.codetopeka.org/an-intro-to-open-education/`}>Open Education is extensive in the computer sciences</a>. It's remarkable how professors, and now amateur programmers, are dedicating much of their free time to producing completely free content. While a college degree will always carry cachet, if you were not lucky enough to secure a large scholarship to an affordable public university, it is in my opinion worthwhile to sum up your possible educational resources offered online or at your public library. Fortunately the logistics of Open Education <a href={`https://HolmSchool.github.io/holm-school/27-D.R.Y.-applies-to-colleges-too/`}>do not require that EVERY professor produce OER</a>, just that a few do in order to suffice for educational requirements of online learners. That's because there's no need for 50 free Algorithms textbooks, when one really good Algorithms textbook suffices for every online learner out there. This is D.R.Y. (Don't Repeat Yourself), and computer scientists have covered all the bases of a computer science education (both books and lectures) for more than a decade now. To ignore this cache of resources is a disservice to yourself, because OER/OCW in combination with an affordable public university degree is a great way to excel as a computer scientist. It "flattens" universities because even kids at community colleges can learn from lecturers from prestigious universities. Skills, in my opinion, trump prestige, even if the market doesn't directly reflect that at the moment. OER holds the potential for a meritocratic future, where educational resources are affordable, universal access is not restricted, and prestige doesn't matter quite as much. This flattening will accelerate as soon as we get a "Spotify for Books" for $15 a month. The university public library will be readily available to almost everyone. It's now a matter of awareness of OER, rather than an issue of access. Tablet computers cost $50 from Amazon (even cheaper used) and can fund years of reading free CS OER. Raspberry Pis are $50 and can fund years of beginning programming. Education is now on Moore's Law where a college degree can be funded completely through the "cost" of viewing a few ads when you download books or view YouTubes. To pursue bricks and mortar universities is a luxury few can afford.
          </p>
          <p>
            College actually costs around 54-88 times the sticker price, depending on whether you're a freshman, sophomore, junior, or senior. That's because the opportunity cost of not investing the tuition price in index funds is roughly 2 to the power of ((ageOfRetirement - 22 years of age)/6.6). That's because the <a href={`https://www.khanacademy.org/economics-finance-domain/core-finance/interest-tutorial/compound-interest-tutorial/v/the-rule-of-72-for-compound-interest`}>Rule of 72</a> says a 11% interest gain doubles every 6.6 years, and a total stock market index fund like VTSAX (a mutual fund from Vanguard), VTI (an equivalent ETF from Vanguard), or an S&P500 index have earned on average 11.3% a year for the past 40 years. To be specific, 2^((60-22)/6.6) is 54.1. That means that college saddles you with debt that prevents you from earning the same amount of money in a Roth IRA or 401k, where it can accumulate for 38 years until you retire at 60. That factor, as determined by the rule fo 72 over 38 years, is roughly 54x the sticker price of your college's tuition. For a $100,000 private university, that's $5.4 million. For a $40k public university, that's $2.16 million. That's the opportunity cost of college, and <a href={`https://medium.com/views-from-the-treehouse/your-college-degree-will-cost-you-2m-c20c2570bd57`}>it is shocking</a>. That is why millennials, who have faced tuition costs that have increased 4 times the inflation rate, are coming out with lower net worths, lifetime total earnings, and standard of living/quality of life than their parents. College, in my opinion, is a bit of scam (or at least just doesn't make financial sense in the day and age of open source computing and the internet), because colleges would rather saddle YOU with 40 years of compounding debt than enabling you to earn that equivalent compounding interest. If you find a way to get your first junior development job for free, you're making 54x the cost of an non-free education when you put that money into an index fund in an IRA or 401k. And even better, most programming jobs offer tuition reimbursement as a benefit, so you can take online classes for free once you're working (University of the People's B.S. in computer science is $4000 total, and Georgia Tech's Online Masters in Computer Science (OMSCS) is $7000 total, and both are aimed at working adults). With tuition reimbursement, you could earn up to a master's degree in CS at no cost to you, since UoPeople and the OMSCS are well within most yearly budget constraints of tuition reimbursement benefits. To pass on this benefit, at an immense cost to you, is probably unwise.</p>
          <p>To learn more about compound interest's impact at a young age, I suggest looking up <a href={`http://instagram.com/personalfinanceclub`}>Jeremy Schneider's Personal Finance Club</a>, <a href={`https://jlcollinsnh.com/stock-series`}>JL Collins's "Stock Series"</a>, <a href={`https://mrmoneymustache.com`}>Mr. Money Mustache</a>, and <a href={`https://HolmSchool.github.io/holm-school/free-index-funds-books`}>HolmSchool/free-index-funds-books</a> for more information about broad-based total stock market index fund investing and how frugality at a young age can enable dreams for computer scientists like retiring early. Learning this material while you're young could be worth millions of dollars to you. Living frugal in your youth, including being frugal in regards to a college education cost, can reward you with fifty times the equivalent cost of something, instead of losing the equivalent. When you consider that $150 intro to programming textbook costs an 18 year old $13215 [150 * 2^((60-18)/6.6)] and the $1000 tuition for the class costs $88,100 in lost savings at retirement, you really start to see the benefit of OER, OpenCourseWare, and just buying a cheap $50 <a href={`http://raspberrypi.org`}>Raspberry Pi</a> instead of going all out on college. Now do the equivalent for 8 classes a year, compounded for 38-42 years, and you see the real cost of college versus teaching yourself for free. These opportunity costs are real, the math of compounding interest is valid, and the financial logistics behind broad-based index funds have been battle tested for 40 years. Things cost you many times their actual sticker value when you're young, compared to if you invested the equivalent amount in a Roth IRA, and so frugality pays for itself if you take the time to learn how to be frugal in life and avoid overconsumption past your bare needs. The fact that so few 18 year olds know this is why student loan debt exceeds $1.5 trillion in America. Colleges have been making out like bandits on the backs of kids. I think you should Holm School a computer science degree, and instead of working for 40 years, live frugally enough that you can retire in 10 years of employment as a computer scientist. Going to an affordable college (through tactics like living at home and going to the place that gives you the best scholarship, or <a href={`https://HolmSchool.github.io/holm-school/30-the-barebone-baseline-degree-manifesto`}>at bare minimum</a> if there's not a public university in your hometown UoPeople) enables great financial success in life. Don't destroy your retirement by going to a college that costs 54-88x the sticker price if you can go somewhere, anywhere, for cheap. "Prestige" doesn't matter that much, "prestige" is a marketing ploy. Move past the concept of prestige and into the realm of financial independence instead. I promise you, in my experience, it is worth it, and that's why I've created Holm School to teach how to "Holm School" a computer science education. Part of that experience is living frugally and <a href={`https://www.mrmoneymustache.com/2012/01/13/the-shockingly-simple-math-behind-early-retirement/`}>saving and investing over 50% of your take home salary starting at the age of 22</a>.</p>
          <p>Holmschooling doesn't mean you don't have to study or can blow off getting a college-equivalent education. In fact, you'll have to study even harder since you're bypassing the privilege of prestige, but if you pull it off you can have a very productive and fruitful life. I promote the idea of "OER literacy," in that there are many advantages for people who take the time to make themselves aware of what OER and OCW are and how to use them productively for self-study. Teaching yourself how to teach yourself without external stimuli or through external funding is extremely rewarding, especially if you do it at a young age. Unschooling will never be mainstream, but as young future-computer scientists acquaint themselves with open source education by becoming competent in Github and finding OER and OCW, it will become obvious that college simply costs too much when the free online resources are equivalent, if not better. The stigma against "free textbooks" will wain when Holm Schoolers and other open source home schoolers gain financial independence in their thirties. If you can do it by earning a scholarship at a local university, then I say go to the university. But if you can't afford your college offers, if they exceed the price of UoPeople, or if you are unemployed and can't find a minimum wage job to pay for UoPeople tuition (equivalent to just 3 hours of work a week for four years), I would suggest exhausting your resources for free computer science education online. Taking a few weeks to acquaint yourself to the offerings on Github and YouTube might just enable your life to be turned around. It did for me. I was unemployed and broke at thirty, when I enrolled at my local university and started studying OpenCourseWare on the side while only taking 1-3 computer science classes a semester. I discovered my public library had free Treehouse subscriptions and taught myself modern web development in my spare time. I netted my first programming job, using a web framework I learned on Treehouse, for just $8000 worth of public university classes. I had a bachelor's degree in art history, which helped, but my Treehouse is what did it. If you don't get Treehouse, substitute it with OER or Lynda (which most public libraries have). What cost me $8000 could potentially be done for free. I taught myself BASIC in sixth grade and have been making web pages since seventh, so I am an outlier in my computer science educational experience, but all it takes is more time to make up the equivalent, and more time is much more affordable when you're not paying tuition. That's what OCW and OER enable.</p>
          <hr/>
          <h2>Holm School creates free open source curricula and courses on Github</h2>
          <p>
            Holm School does not create original content such as textbooks or courses. Instead, I curate the multitudes of open source educational resources ("OER") out there in computer science to compile free college-equivalent curricula. And there really are a multitude of computer science OER. It's overwhelming to look at a list of 1000 free OER CS textbooks and create a self-educational curriculum using them, especially if you're new to programming. The OER I create ("Holm School") is public domain and free to copy and reuse by anyone anywhere. I work in the public domain because <a href="https://publicdomainmanifesto.org/manifesto/">I believe in having a robust public domain in America</a>, because the public domain is basically advanced Artificial Intelligence for education. 
          </p>
          <p>
            If you know of some killer OER that isn't on our lists, or want to contribute in some way, dive right in! If you need a guide to Github, <a href="https://www.youtube.com/watch?v=0fKg7e37bQE">I recommend watching this learncode.academy video</a> and <a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZF9C0YMKuns9sLDzK6zoiV">this Coding Train playlist</a>. Please contribute! That's the meaning of open source and Holm School is an open source learning community.
          </p>
          <p>
            The <Link to={`/blog`}>Blog</Link> focuses on reasons why college probably isn't the best choice of education in computer science these days, especially if you didn't get an affordable scholarship at a public university in your hometown. If you can't afford college, <Link to={`/guide`}>I have written a guide about how to be a "Not Rich Computer Scientist"</Link>. I managed to get my first programming job spending just $8000 (granted I had been programming and making web pages since sixth grade), and I am convinced that I could have done it for even cheaper if not on the order of a couple hundreds of dollars total. Much of that is possible because my public library subscribes to <a href="https://teamtreehouse.com">Treehouse</a> for free for patrons, but most libraries subscribe to Lynda and all these programs offer free CS education for public library patrons. The public library is a great place to learn to program. Along with Lynda, Treehouse, and others (Seattle Public Library and Kansas City, MO Public Library subscribes to <a href={`https://learning.oreilly.com/`}>O'Reilly Online</a>), the public library usually has a whole row of programming books. You can probably teach yourself JavaScript from a book at the library. It won't be the latest and greatest version of javascript, but since you're a beginner, that's just fine. You only need the basics and Lynda can fill in the gaps. Don't be intimidated by the large size of some of the coding books at your public library (Dewey Decimal Code 0-100), they are big because they cover the basics and are actually written for newbies, not experts! That's a little counterintuitive, you might think big thick books are for the experts but that's not the case with computer science books. They're for beginners! Hit as many of those big books that spark your interest at your public library (even "old" computer science books are helpful), and then move on to this website, online videos (like Lynda, Treehouse, Safari Books, or PluralSight), or other sources of learning. I firmly believe everything necessary to land a first programming job can be learned in the CS stacks of a public library, and that's not even including the fact that most public libraries subscribe to Lynda (and maybe even Treehouse) nowadays which just adds to the immense amount you can learn for free from your public library. Don't sell yourself short by enrolling in college before you exhaust the resources at the public library. And don't enroll in college before you exhaust the online OER resources too! It's simply too expensive, <Link to={`/youth-importance-avoid-debt`}>and as a young person you want to avoid debt as much as feasibly possible</Link>, since <Link to={`/retire-a-millionaire-by-skipping-college`}>the opportunity cost of debt is potentially decades of compounding interest of your investment in index funds to your benefit.</Link>
          </p>
          <p>
            I have been involved in open source since I installed Red Hat in ninth grade and my best friend showed me how I could manipulate the C++ of Mozilla and recompile it to change the GUI myself. I realized open source was the future of everything (not just computer science), and I still firmly believe that to this day. I was open sourcing my web pages and music before <a href={`https://creativecommons.org/`}>Creative Commons</a> was even a thing. Open Source has taken over software development, and now it's slowly taking over education. I think the basic foundational philosophy behind open source is the same foundational philosophy behind public libraries, and as such I believe that a combination of the public library and open source hardware (Raspberry Pi), software (Raspbian), and educational resources (OER and OCW) should be the foundation behind modern education surrounding computer science. The fact that it costs just a couple hundreds of dollars is a wonderful benefit -- <a href="https://HolmSchool.github.io/holm-school/free-index-funds-books">put the savings in a Roth (if your tax bracket is low) or Traditional IRA at Vanguard and invest in VTSAX!</a> I think open source will soon consume the book, music, and movie industry. Those will be the last to go, because they believe that copyright is essential almost to a religious level, but as software shows open source immediately contributes to the world and invents a ridiculous amount of life changing software and hardware. If you aren't using open source hardware and software, you risk imprisoning yourself in a walled garden you will have to pay a ransom eventually to get out of and free yourself. Since everything is moving towards open source, the earlier you start using open source stuff, including textbooks, the more expertise you'll have in an important job skill and the more prepared you'll be for a STEM career. <a href="https://github.com/SALVD/free-books-about-open-source-licensing">Here is one of our repos about open source licensing if you need to read up on them</a>. Soon, with market pressure due to file sharing innovations like Library Genesis, the publishing industry will consent to a "Spotify for Books" app for ~$15 a month. At the point in which every published book in history is available to read for $15 a month -- which will be a reality within 10 years, trust me -- the education game is over. There will no longer be the need to pay a university for access to the university library's stacks. You can read exactly what they read at Harvard, MIT, and Carnegie-Mellon in the comfort of your bedroom. Education will be flattened and everyone can self educate for the cost of a monthly Netflix subscription. When that service is globalized, that's when we'll see huge educational advancement in all sectors of science. That future is already almost a reality with startups like <a href="https://perlego.com">Perlego</a> are working to make a legal alternative to Library Genesis a reality. The future is bright for self educators unwilling to go into debt just to obtain a degree.
          </p>
          <p>
            I will not tell you that a college degree is worthless. College is a great experience*. The asterisk is: If you can do it for free or a couple thousand of dollars total. A full ride scholarship is possible if you are a National Merit Scholar, <a href="https://HolmSchool.github.io/holm-school/psat-sat-act">so study up on your PSAT/SAT/ACT</a>! Nothing is wrong with studying vocabulary (good for writing) and math (good for STEM careers). But you should always go with the cheapest college scholarship you get -- and with the option of a $4000 University of the People bachelor's of science degree in computer science, I wouldn't recommend spending more than $4000 on a college education. That is possible if you go to a public university in your hometown on scholarship (or else just study computer science/math classes) and live at home. Read other strategies in my blog post, <Link to={`/bootstrap-your-computer-science-career`}>"Boostrap Your CS Career"</Link>. If you would like other affordable education strategies, <Link to={`/blog`}>be sure to read my blog</Link>, including my <Link to={`/the-f-you-degree`}>$5200 F-You Degree to earn F-You Money</Link>.
          </p>
          <p>
            <Link to={`/dont-spend-a-cent-on-cs`}>You shouldn't have to spend a cent on computer science education</Link>, apart from a Raspberry Pi, and affordable used iPad, and internet costs. You can even keep it free if you use a cloud IDE at a terminal at your public library. It's amazing what's possible in this particular STEM career due to the influence of open source licensing. Almost everything related to computers is now open source, and as a result the expense of getting involved with open source is as low as humanly possible, and promises to get even lower in the future. <Link to={`/your-public-library-will-pay-for-your-college-education`}>In the future your college will pay for your college education by bankrolling an affordable online degree in computer science for you</Link>. <Link to={`/the-f-you-degree`}>You can now pay for your B.S. in computer science working three hours a week at minimum wage through your 4 years</Link>, an a Master's in computer science is available for ~$7000 through <a href="http://www.omscs.gatech.edu/">Georgia Tech's OMSCS program</a>. That said, anything you can do through those programs you can do for free as well. Both use OER as their textbook in their classes. You can study the same classes for free in your spare time. There is no limitation to your learning with OER, it's changing college forever. I would suggest going to an affordable local public university (and only studying computer science/math and supplment at your public library -- that's what I did to get my first job), but there are many other options to fit your individual needs.
          </p>
          <p>
            I hope you find Open Ed as fascinating as I do! I wrote my senior thesis at Reed College about the sociology of education and ever since then have been fascinated with the daily play by play of colleges in relation to open education alternatives. Considering colleges aren't willing apparently to embrace open source across the board, just through a few exceptions, it makes more sense to stick with open source education and perhaps even skip college if it costs more than University of the People. Computer science can be learned for free due to OER and OCW, and it might make more strategic sense to study enough to get your first programming job (after four years of study), and then use your educational tuition reimbursement benefit to complete your degrees at UoPeople and GATech OMSCS. At which point you'll be set for life with zero cost, employed as a programmer since 22 and debt free too, able to maximize your IRA and 401K every year starting at 22, which sets you up for early retirement. It's a wonderful life thanks to open source and FIRE principals as articulated by <a href="https://mrmoneymustache.com">Mr. Money Mustache</a> and <a href="https://jlcollinsnh.com/stock-series/">JL Collins</a>. Combining CS and FIRE has the potential for a very rewarding life. I'm sharing my strategies for what turned my life around -- using the public library and an affordable public university in my hometown to study computer science for cheap and, once employed, through frugal living and having a savings rate of 50% to 70% -- to break out of poverty/unemployment and instead already being set for retirement at 60 after just three years of working. The advantages are obviously my young age and my interest in computers, but I hardly think I own a monopoly on those advantages given how interested young kids are in computers and the internet too these days. Free books and frugality are just the beginning, the next step is free college, the next step after that is financial independence in your twenties or early thirties, and the step after that is early retirement and, as I call it, <Link to={`/fi-dos-manifesto`}>"FI-DOS" (or "Financial Independence; Do Open Source")</Link>. All this is possible thanks to open source and affordable computers/internet. It's a crazy world, even one that as an early adopter of open source in my life I never could have predicted. Let's explore this new wave of STEM lifestyles that are emerging as technology expands in ways never viewed as possible and changes educational possibilities. Holm School is University in a Raspberry Pi. What comes after that is up to you. I hope you choose to change the world.
          </p>
    </div>
</Layout>
)


export default aboutPage;